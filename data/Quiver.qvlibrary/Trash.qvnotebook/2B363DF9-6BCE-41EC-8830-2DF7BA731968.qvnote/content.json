{
  "title": "2 优化算法-遗传算法",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; white-space: normal;\"><div><p style=\"margin: 5px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">优化算法入门系列文章目录（更新中）：</span></p><p style=\"margin: 5px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　1.<span style=\"font-size: 13px;\">&nbsp;</span><a href=\"http://www.cnblogs.com/heaad/archive/2010/12/20/1911614.html\" style=\"color: rgb(29, 88, 209); text-decoration: none;\" target=\"_blank\">模拟退火算法</a></span></p><p style=\"margin: 5px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　2.<span style=\"font-size: 13px;\">&nbsp;</span><a href=\"http://www.cnblogs.com/heaad/archive/2010/12/23/1914725.html\" style=\"color: rgb(29, 88, 209); text-decoration: none;\" target=\"_blank\">遗传算法</a></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 24pt;\"><span style=\"font-size: 19px;\">&nbsp;</span></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 14pt;\"><strong>一. 爬山算法 ( Hill Climbing )</strong></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 介绍模拟退火前，先介绍爬山算法。爬山算法是一种简单的贪心搜索算法，该算法每次从当前解的临近解空间中选择一个最优解作为当前解，直到达到一个局部最优解。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 爬山算法实现很简单，其主要缺点是会陷入局部最优解，而不一定能搜索到全局最优解。如图1所示：假设C点为当前解，爬山算法搜索到A点这个局部最优解就会停止搜索，因为在A点无论向那个方向小幅度移动都不能得到更优的解。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\"><img src=\"http://pic002.cnblogs.com/images/2010/63234/2010122016525713.png\" style=\"border: 0px; max-width: 1000px; display: block; margin-left: auto; margin-right: auto;\"/></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-align: center;\"><span style=\"font-size: 12pt;\">图1</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\"><strong>&nbsp;</strong></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 24pt;\"><span style=\"font-size: 19px;\"><strong>&nbsp;</strong></span></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 14pt;\"><strong>二. 模拟退火(SA,Simulated Annealing)思想</strong></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 爬山法是完完全全的贪心法，每次都鼠目寸光的选择一个当前最优解，因此只能搜索到局部的最优值。模拟退火其实也是一种贪心算法，但是它的搜索过程引入了随机因素。模拟退火算法<strong>以一定的概率</strong>来接受一个比当前解要差的解，因此<strong>有可能</strong>会跳出这个局部的最优解，达到全局的最优解。以图1为例，模拟退火算法在搜索到局部最优解A后，会<strong>以一定的概率</strong>接受到E的移动。也许经过几次这样的不是局部最优的移动后会到达D点，于是就跳出了局部最大值A。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 模拟退火算法描述：</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 若J( Y(i+1) )&gt;= J( Y(i) ) &nbsp;(即移动后得到更优解)，则总是接受该移动</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 若J( Y(i+1) )&lt; J( Y(i) ) &nbsp;(即移动后的解比当前解要差)，则<strong>以一定的概率接受移动，而且这个概率随着时间推移逐渐降低（逐渐降低才能趋向稳定）</strong></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　这里的“一定的概率”的计算参考了金属冶炼的退火过程，这也是模拟退火算法名称的由来。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　根据热力学的原理，在温度为T时，出现能量差为dE的降温的概率为P(dE)，表示为：</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><strong><span style=\"font-size: 12pt;\">　　　　P(dE) = exp( dE/(kT) )</span></strong></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　其中k是一个常数，exp表示自然指数，且dE&lt;0。这条公式说白了就是：温度越高，出现一次能量差为dE的降温的概率就越大；温度越低，则出现降温的概率就越小。又由于dE总是小于0（否则就不叫退火了），因此dE/kT &lt; 0 ，所以P(dE)的函数取值范围是(0,1) 。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　随着温度T的降低，P(dE)会逐渐降低。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　我们将一次向较差解的移动看做一次温度跳变过程，我们以概率P(dE)来接受这样的移动。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　关于爬山算法与模拟退火，有一个有趣的比喻：</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　爬山算法：兔子朝着比现在高的地方跳去。它找到了不远处的最高山峰。但是这座山不一定是珠穆朗玛峰。这就是爬山算法，它不能保证局部最优值就是全局最优值。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　模拟退火：兔子喝醉了。它随机地跳了很长时间。这期间，它可能走向高处，也可能踏入平地。但是，它渐渐清醒了并朝最高方向跳去。这就是模拟退火。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">&nbsp;</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">下面给出模拟退火的伪代码表示。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 24pt;\"><span style=\"font-size: 19px;\"><strong>&nbsp;</strong></span></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 14pt;\"><strong>三. 模拟退火算法伪代码</strong></span></p><div style=\"background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><div style=\"margin-top: 5px; background-color: rgb(245, 245, 245);\"><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; padding-right: 5px;\"><a style=\"color: rgb(29, 88, 209); text-decoration: none; background-color: rgb(245, 245, 245) !important; border: none !important;\" title=\"复制代码\"><img alt=\"复制代码\" src=\"http://common.cnblogs.com/images/copycode.gif\" style=\"border: none !important; background-color: rgb(245, 245, 245) !important; max-width: 1000px;\"/></a></span></div><span style=\"font-size: 12pt; font-family: &quot;Courier New&quot; !important;\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" style=\"border: 0px; vertical-align: middle; padding-right: 5px; max-width: 1000px;\"/><span style=\"font-size: 12px !important; border-width: 1px; border-style: solid; border-color: gray; background-color: rgb(255, 255, 255); padding: 2px; font-family: &quot;Courier New&quot; !important;\">代码</span></span><div style=\"background-color: rgb(245, 245, 245);\"><div style=\"background-color: rgb(245, 245, 245);\"><span style=\"font-size: 12pt; font-family: &quot;Courier New&quot; !important;\"><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">/*</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/>\n* J(y)：在状态y时的评价函数值<br/>\n* Y(i)：表示当前状态<br/>\n* Y(i+1)：表示新的状态<br/>\n* r： 用于控制降温的快慢<br/>\n* T： 系统的温度，系统初始应该要处于一个高温的状态<br/>\n* T_min ：温度的下限，若温度T达到T_min，则停止搜索<br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">*/</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\"><br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 255);\">while</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">( T&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&gt;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;T_min )<br/>\n{<br/>\n　　dE&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">=</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;J( Y(i</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">+</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(128, 0, 128);\">1</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">) )&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">-</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;J( Y(i) ) ;&nbsp;<br/><br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 255);\">　　if</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;( dE&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&gt;=</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(128, 0, 128);\">0</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;)&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">//</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">表达移动后得到更优解，则总是接受移动</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">Y(i</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">+</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(128, 0, 128);\">1</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">)&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">=</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;Y(i) ;&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">//</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">接受从Y(i)到Y(i+1)的移动</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 255);\">　　else</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\"><br/>\n　　{<br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">//</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">&nbsp;函数exp( dE/T )的取值范围是(0,1) ，dE/T越大，则exp( dE/T )也</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 255);\">if</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;( exp( dE</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">/</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">T )&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&gt;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;random(&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(128, 0, 128);\">0</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;,&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(128, 0, 128);\">1</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;) )<br/>\nY(i</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">+</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(128, 0, 128);\">1</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">)&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">=</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;Y(i) ;&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">//</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">接受从Y(i)到Y(i+1)的移动</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">　　}<br/>\n　　T&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">=</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;r&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">*</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;T ;&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">//</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">降温退火 ，0&lt;r&lt;1 。r越大，降温越慢；r越小，降温越快</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/>\n　　/*</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\"><br/>\n　　* 若r过大，则搜索到全局最优解的可能会较高，但搜索的过程也就较长。若r过小，则搜索的过程会很快，但最终可能会达到一个局部最优值<br/></span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 128, 0);\">　　*/</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\"><br/>\n　　i&nbsp;</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">++</span><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; color: rgb(0, 0, 0);\">&nbsp;;<br/>\n}<br/></span></span></div></div><div style=\"margin-top: 5px; background-color: rgb(245, 245, 245);\"><span style=\"font-size: 12px !important; font-family: &quot;Courier New&quot; !important; padding-right: 5px;\"><a style=\"color: rgb(29, 88, 209); text-decoration: none; background-color: rgb(245, 245, 245) !important; border: none !important;\" title=\"复制代码\"><img alt=\"复制代码\" src=\"http://common.cnblogs.com/images/copycode.gif\" style=\"border: none !important; background-color: rgb(245, 245, 245) !important; max-width: 1000px;\"/></a></span></div></div><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 14pt;\"><strong>四. 使用模拟退火算法解决旅行商问题</strong></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　旅行商问题 ( TSP , Traveling Salesman Problem ) ：有N个城市，要求从其中某个问题出发，唯一遍历所有城市，再回到出发的城市，求最短的路线。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　旅行商问题属于所谓的NP完全问题，精确的解决TSP只能通过穷举所有的路径组合，其时间复杂度是O(N!) 。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　使用模拟退火算法可以比较快的求出TSP的一条近似最优路径。（使用遗传算法也是可以的，我将在下一篇文章中介绍）模拟退火解决TSP的思路：</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); padding-left: 30px;\"><span style=\"font-size: 12pt;\">1. 产生一条新的遍历路径P(i+1)，计算路径P(i+1)的长度L( P(i+1) )</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); padding-left: 30px;\"><span style=\"font-size: 12pt;\">2. 若L(P(i+1)) &lt; L(P(i))，则接受P(i+1)为新的路径，否则以模拟退火的那个概率接受P(i+1) ，然后降温</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); padding-left: 30px;\"><span style=\"font-size: 12pt;\">3. 重复步骤1，2直到满足退出条件</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 12pt;\">　　产生新的遍历路径的方法有很多，下面列举其中3种：</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); padding-left: 60px;\"><span style=\"font-size: 12pt;\">1. 随机选择2个节点，交换路径中的这2个节点的顺序。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); padding-left: 60px;\"><span style=\"font-size: 12pt;\">2. 随机选择2个节点，将路径中这2个节点间的节点顺序逆转。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); padding-left: 60px;\"><span style=\"font-size: 12pt;\">3. 随机选择3个节点m，n，k，然后将节点m与n间的节点移位到节点k后面。</span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 24pt;\"><span style=\"font-size: 19px;\"><strong><span style=\"font-size: 14pt;\"><span style=\"font-size: 14px; font-weight: normal;\">&nbsp;</span></span></strong></span></span></p><p style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><span style=\"font-size: 14pt;\"><strong>五. 算法评价</strong></span></p><div style=\"margin: 10px auto; text-indent: 0px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);\"><div><span style=\"font-size: 12pt;\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;模拟退火算法是一种随机算法，并不一定能找到全局的最优解，可以比较快的找到问题的近似最优解。&nbsp;如果参数设置得当，模拟退火算法搜索效率比穷举法要高。</span></div></div></div></div>"
    }
  ]
}