{
  "title": "log4j的用法",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; white-space: normal;\"><div><h1 style=\"text-align: center;\">log4j的用法</h1></div><div><span style=\"font-size: 19px;\"><b>一、前言：</b>&nbsp;<br clear=\"none\"/></span>&nbsp;&nbsp;&nbsp;&nbsp; log4j 是一个开放源码项目，是广泛使用的以Java编写的日志记录包。由于log4j出色的表现，&nbsp;&nbsp;&nbsp;&nbsp; 当时在log4j完成时，log4j开发组织曾建议sun在jdk1.4中用log4j取代jdk1.4 的日志工具类，但当时jdk1.4已接近完成，所以sun拒绝使用log4j，当在java开发中实际使用最多的还是log4j，&nbsp;&nbsp;&nbsp;&nbsp; 人们遗忘了sun的日志工具类。&nbsp;&nbsp;&nbsp;&nbsp; 它的一个独有特性包括在类别中继承的概念。通过使用类别层次结构，这样就减少了日志记录输出量，并将日志记录的开销降到最低。&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp;&nbsp; 它允许开发者控制以任意间隔输出哪些日志语句。通过使用外部配置文件，完全可以在运行时进行配置。几乎每个大的应用程序都包括其自己的日志记录或跟踪 API。经验表明日志记录是开发周期中的重要组成部分。同样，日志记录提供一些优点。首先，它可以提供运行应用程序的确切 上下文。一旦插入到代码中，生成日志记录输出就不需要人为干涉。其次，日志输出可以保存到永久媒体中以便以后研究。最后，除了在开发阶段中使用，十分丰富的日志记录包还可以用作审计工具。&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; 依照该规则，在 1996 年初，EU SEMPER（欧洲安全电子市场）项目就决定编写自己的跟踪 API。 在无数次改进、几次具体化和许多工作之后，该 API 已经演变成 log4j，一种流行的 Java 日志记录包。&nbsp; 这个包按 IBM 公共许可证分发，由开放源码权威机构认证。</div><div><br/></div><div>&nbsp;&nbsp;&nbsp; 日志记录有其自己的缺点。它会降低应用程序的速度。如果太详细，它可能会使屏幕滚动变得看不见。&nbsp; 为了减低这些影响，log4j 被设计成快速且灵活的。由于应用程序很少将日志记录当作是主要功能，&nbsp; log4j API 力争易于了解和使用。&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp; log4j，它可以控制以任意间隔输出哪些日志语句。</div><div><br/></div><div><hr/></div><div><br/></div><div><p><b><span style=\"font-size: 19px;\">二、主要组件</span></b></p><p><b><span style=\"font-size: 16px;\">2. 1、根类别（在类别层次结构的顶部，即全局性的日志级别）&nbsp;</span></b><br clear=\"none\"/>\n配置根Logger，其语法为：</p><p>log4j.rootLogger = [ level ] , appenderName, appenderName, ...</p><p>level 是日志记录的类别&nbsp;<br clear=\"none\"/>\nappenderName就是指定日志信息输出到哪个地方。您可以同时指定多个输出目的地。</p></div><div><br/></div><div>类别level 为 OFF、FATAL、ERROR、WARN、INFO、DEBUG、log、ALL或自定义的优先级。&nbsp;<br clear=\"none\"/>\nog4j常用的优先级FATAL&gt;ERROR&gt;WARN&gt;INFO&gt;DEBUG&nbsp;<br clear=\"none\"/>\n配置根Logger，其语法为：&nbsp;</div><div>log4j.rootLogger = [ level ] , appenderName, appenderName, …&nbsp;</div><div><br/></div><div>如果为log4j.rootLogger=WARN，则意味着只有WARN,ERROR,FATAL被输出，DEBUG,INFO将被屏蔽掉。</div><div><p>举例：log4j.rootCategory=INFO,stdout,Runlog,Errorlog&nbsp;<br clear=\"none\"/>\n根日志类别为INFO，DEBUG将被屏蔽，其他的将被输出。 stdout,Runlog,Errorlog分别为3个输出目的地。</p><p><b><span style=\"font-size: 16px;\">2.2、常用输出格式</span></b></p><p>-X号:X信息输出时左对齐；&nbsp;<br clear=\"none\"/>\n%p:日志信息级别&nbsp;<br clear=\"none\"/>\n%d{}:日志信息产生时间&nbsp;<br clear=\"none\"/>\n%c:日志信息所在地（类名）&nbsp;<br clear=\"none\"/>\n%m:产生的日志具体信息&nbsp;<br clear=\"none\"/>\n%n:输出日志信息换行&nbsp;<br clear=\"none\"/>\n举例：&nbsp;<br clear=\"none\"/>\nlog4j.appender.stdout.layout.ConversionPattern= %5p %d{yyyy-MM-dd HH:mm:ss} %c %m %n&nbsp;<br clear=\"none\"/>\nlog4j.appender.Runlog.layout.ConversionPattern= %5p %d{yyyy-MM-dd HH:mm:ss} %c %m %n&nbsp;<br clear=\"none\"/>\nlog4j.appender.Errorlog.layout.ConversionPattern= %5p %d{yyyy-MM-dd HH:mm:ss} %c %m %n</p><p><span style=\"font-size: 16px;\"><b>2.3、布局&nbsp;</b></span><br clear=\"none\"/>\n使用的输出布局，其中log4j提供4种布局：&nbsp;<br clear=\"none\"/>\norg.apache.log4j.HTMLLayout（以HTML表格形式布局）&nbsp;<br clear=\"none\"/>\norg.apache.log4j.PatternLayout（可以灵活地指定布局模式），&nbsp;<br clear=\"none\"/>\norg.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），&nbsp;<br clear=\"none\"/>\norg.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）</p><p>举例：&nbsp;<br clear=\"none\"/>\n输出格式为HTML表格&nbsp;<br clear=\"none\"/>\nlog4j.appender.stdout.layout=org.apache.log4j.HTMLLayout</p><p>输出格式为可以灵活地指定布局模式&nbsp;<br clear=\"none\"/>\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout</p><p>输出格式为包含日志信息的级别和信息字符串&nbsp;<br clear=\"none\"/>\nlog4j.appender.stdout.layout=org.apache.log4j.SimpleLayout</p><p>输出格式为包含日志产生的时间、线程、类别等等信息&nbsp;<br clear=\"none\"/>\nlog4j.appender.stdout.layout=org.apache.log4j.TTCCLayout</p><p><span style=\"font-size: 16px;\"><b>2.4、目的地</b></span></p><p>配置日志信息输出目的地Appender，其语法为</p><p>log4j.appender.appenderName = fully.qualified.name.of.appender.class&nbsp;<br clear=\"none\"/>\nlog4j.appender.appenderName.option1 = value1&nbsp;<br clear=\"none\"/>\n...&nbsp;<br clear=\"none\"/>\nlog4j.appender.appenderName.option = valueN&nbsp;<br clear=\"none\"/>\nappenderName就是指定日志信息输出到哪个地方。您可以同时指定多个输出目的地。</p><p>log4j支持的输出目的地：&nbsp;<br clear=\"none\"/>\norg.apache.log4j.ConsoleAppender 控制台&nbsp;<br clear=\"none\"/>\norg.apache.log4j.FileAppender 文件&nbsp;<br clear=\"none\"/>\norg.apache.log4j.DailyRollingFileAppender 每天产生一个日志文件&nbsp;<br clear=\"none\"/>\norg.apache.log4j.RollingFileAppender （文件大小到达指定尺寸的时候产生一个新的文件），&nbsp;<br clear=\"none\"/>\norg.apache.log4j.WriterAppender （将日志信息以流格式发送到任意指定的地方）&nbsp;<br clear=\"none\"/>\norg.apache.log4j.net.SMTPAppender 邮件&nbsp;<br clear=\"none\"/>\norg.apache.log4j.jdbc.JDBCAppender 数据库&nbsp;<br clear=\"none\"/>\n其他如：GUI组件、甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等</p><p>举例：</p><p>输出到控制台&nbsp;<br clear=\"none\"/>\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender（指定输出到控制台）&nbsp;<br clear=\"none\"/>\nlog4j.appender.Threshold=DEBUG（指定输出类别）&nbsp;<br clear=\"none\"/>\nlog4j.appender.CONSOLE.Target=System.out&nbsp;<br clear=\"none\"/>\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout（指定输出布局）&nbsp;<br clear=\"none\"/>\nlog4j.appender.CONSOLE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（指定输出格式）</p><p>输出到文件</p><p>&nbsp;&nbsp; log4j.appender.FILE=org.apache.log4j.FileAppender（指定输出到文件）&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp; log4j.appender.FILE.File=file.log（指定输出的路径及文件名）&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp; log4j.appender.FILE.Append=false&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp; log4j.appender.FILE.layout=org.apache.log4j.PatternLayout（指定输出的布局）&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp; log4j.appender.FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（指定输出的格式）</p><p>输出到文件（轮换&quot;日志文件&quot;,当日志文件达到指定大小时，该文件就被关闭并备份，然后创建一个新的日志文件）</p><p>&nbsp; log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender（指定输出到文件）&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.Threshold=ERROR（指定输出类别）&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.File=rolling.log（指定输出的路径及文件名）&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.Append=true&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.MaxFileSize=10KB（指定输出到文件的大小）&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.MaxBackupIndex=1&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout（指定采用输出布局）&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（指定采用输出格式）</p><p>输出到Socket&nbsp;<br clear=\"none\"/>\nlog4j.appender.SOCKET=org.apache.log4j.RollingFileAppender（指定输出到Socket）&nbsp;<br clear=\"none\"/>\nlog4j.appender.SOCKET.RemoteHost=localhost（远程主机）&nbsp;<br clear=\"none\"/>\nlog4j.appender.SOCKET.Port=5001（远程主机端口）&nbsp;<br clear=\"none\"/>\nlog4j.appender.SOCKET.LocationInfo=true&nbsp;<br clear=\"none\"/>\nlog4j.appender.SOCKET.layout=org.apache.log4j.PatternLayout（布局）&nbsp;<br clear=\"none\"/>\nlog4j.appender.SOCET.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD]%n%c[CATEGORY]%n%m[MESSAGE]%n%n（输出格式）</p><p>输出到邮件&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL=org.apache.log4j.net.SMTPAppender（指定输出到邮件）&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.Threshold=FATAL&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.BufferSize=10&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.From=chenyl@hollycrm.com（发件人）&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.SMTPHost=mail.hollycrm.com（SMTP服务器）&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.Subject=Log4J Message&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.To=chenyl@hollycrm.com（收件人）&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.layout=org.apache.log4j.PatternLayout（布局）&nbsp;<br clear=\"none\"/>\nlog4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（格式）</p><p>输出到数据库&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender（指定输出到数据库）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test（指定数据库URL）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.driver=com.mysql.jdbc.Driver（指定数据库driver）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.user=root（指定数据库用户）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.password=root（指定数据库用户密码）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES (&apos;[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&apos;)（组织SQL语句）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout（布局）&nbsp;<br clear=\"none\"/>\nlog4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（格式）</p></div><div><br/></div><div><b><span style=\"font-size: 16px;\">2.5、日志类别补充</span>&nbsp;</b><br clear=\"none\"/>\n有时我们需要对某个特定的部分指定有别于根类别的日志类别，可以指定某个包的优先级&nbsp;<br clear=\"none\"/>\n如：&nbsp;<br clear=\"none\"/>\n&nbsp; log4j.category.com.neusoft.mbip.dm.util=ERROR ，其中com.neusoft.mbip.dm.util为我们需要特别指定日志类别的部分。&nbsp;<br clear=\"none\"/>\n&nbsp; 或者可以指定输出文件的优先级&nbsp;</div><div>&nbsp; log4j.appender.Errorlog.Threshold=ERROR&nbsp;</div><div><br/></div><div><hr/></div><div><br/></div><div><b><span style=\"font-size: 19px;\">三、 常用log4j配置&nbsp;</span></b></div><div><p>常用log4j配置，一般可以采用两种方式，.properties和.xml,下面举两个简单的例子：</p><p><b><span style=\"font-size: 16px;\">3.1、log4j.properties</span></b></p><p>### 设置org.zblog域对应的级别INFO,DEBUG,WARN,ERROR和输出地A1，A2 ##&nbsp;<br clear=\"none\"/>\nlog4j.category.org.zblog=ERROR,A1&nbsp;<br clear=\"none\"/>\nlog4j.category.org.zblog=INFO,A2</p><p>log4j.appender.A1=org.apache.log4j.ConsoleAppender&nbsp;<br clear=\"none\"/>\n### 设置输出地A1，为ConsoleAppender(控制台) ##&nbsp;<br clear=\"none\"/>\nlog4j.appender.A1.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n### 设置A1的输出布局格式PatterLayout,(可以灵活地指定布局模式）##&nbsp;<br clear=\"none\"/>\nlog4j.appender.A1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} [%c]-[%p] %m%n&nbsp;<br clear=\"none\"/>\n### 配置日志输出的格式##</p><p>log4j.appender.A2=org.apache.log4j.RollingFileAppender&nbsp;<br clear=\"none\"/>\n### 设置输出地A2到文件（文件大小到达指定尺寸的时候产生一个新的文件）##&nbsp;<br clear=\"none\"/>\nlog4j.appender.A2.File=E:/study/log4j/zhuwei.html&nbsp;<br clear=\"none\"/>\n### 文件位置##&nbsp;<br clear=\"none\"/>\nlog4j.appender.A2.MaxFileSize=500KB&nbsp;<br clear=\"none\"/>\n### 文件大小##&nbsp;<br clear=\"none\"/>\nlog4j.appender.A2.MaxBackupIndex=1&nbsp;<br clear=\"none\"/>\nlog4j.appender.A2.layout=org.apache.log4j.HTMLLayout&nbsp;<br clear=\"none\"/>\n##指定采用html方式输出</p><p><b><span style=\"font-size: 16px;\">3.2、log4j.xml</span></b></p><p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;GB2312&quot; ?&gt;&nbsp;<br clear=\"none\"/>\n&lt;!DOCTYPE log4j:configuration SYSTEM &quot;log4j.dtd&quot;&gt;</p><p>&lt;log4j:configuration xmlns:log4j=&quot;<a href=\"http://jakarta.apache.org/log4j/%22\" shape=\"rect\">http://jakarta.apache.org/log4j/&quot;</a>&gt;</p><p>&lt;appender name=&quot;org.zblog.all&quot; class=&quot;org.apache.log4j.RollingFileAppender&quot;&gt;&nbsp;<br clear=\"none\"/>\n&lt;!-- 设置通道ID:org.zblog.all和输出方式：org.apache.log4j.RollingFileAppender --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;param name=&quot;File&quot; value=&quot;E:/study/log4j/all.output.log&quot; /&gt;&lt;!-- 设置File参数：日志输出文件名 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;param name=&quot;Append&quot; value=&quot;false&quot; /&gt;&lt;!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param name=&quot;ConversionPattern&quot; value=&quot;%p (%c:%L)- %m%n&quot; /&gt;&lt;!-- 设置输出文件项目和格式 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;/layout&gt;&nbsp;<br clear=\"none\"/>\n&lt;/appender&gt;</p><p>&lt;appender name=&quot;org.zblog.zcw&quot; class=&quot;org.apache.log4j.RollingFileAppender&quot;&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;param name=&quot;File&quot; value=&quot;E:/study/log4j/zhuwei.output.log&quot; /&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;param name=&quot;Append&quot; value=&quot;true&quot; /&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;param name=&quot;MaxFileSize&quot; value=&quot;10240&quot; /&gt; &lt;!-- 设置文件大小 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param name=&quot;ConversionPattern&quot; value=&quot;%p (%c:%L)- %m%n&quot; /&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;/layout&gt;&nbsp;<br clear=\"none\"/>\n&lt;/appender&gt;</p><p>&lt;logger name=&quot;zcw.log&quot;&gt; &lt;!-- 设置域名限制，即zcw.log域及以下的日志均输出到下面对应的通道中 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;level value=&quot;debug&quot; /&gt;&lt;!-- 设置级别 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;appender-ref ref=&quot;org.zblog.zcw&quot; /&gt;&lt;!-- 与前面的通道id相对应 --&gt;&nbsp;<br clear=\"none\"/>\n&lt;/logger&gt;</p><p>&lt;root&gt; &lt;!-- 设置接收所有输出的通道 --&gt;&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; &lt;appender-ref ref=&quot;org.zblog.all&quot; /&gt;&lt;!-- 与前面的通道id相对应 --&gt;&nbsp;<br clear=\"none\"/>\n&lt;/root&gt;</p><p>&lt;/log4j:configuration&gt;</p><p><b><span style=\"font-size: 16px;\">3.3、配置文件加载方法：</span></b></p><p>import org.apache.log4j.Logger;&nbsp;<br clear=\"none\"/>\nimport org.apache.log4j.PropertyConfigurator;&nbsp;<br clear=\"none\"/>\nimport org.apache.log4j.xml.DOMConfigurator;</p><p>public class Log4jApp {&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; public static void main(String[] args) {&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DOMConfigurator.configure(&quot;E:/study/log4j/log4j.xml&quot;);//加载.xml文件&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //PropertyConfigurator.configure(&quot;E:/study/log4j/log4j.properties&quot;);//加载.properties文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Logger log=Logger.getLogger(&quot;org.zblog.test&quot;);&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; log.info(&quot;测试&quot;);&nbsp;<br clear=\"none\"/>\n&nbsp;&nbsp;&nbsp; }&nbsp;<br clear=\"none\"/>\n}</p></div><div><br/></div><div><span style=\"font-size: 16px;\"><b>3.4、项目使用log4j&nbsp;</b></span><br clear=\"none\"/>\n在web应用中，可以将配置文件的加载放在一个单独的servlet中，并在web.xml中配置该servlet在应用启动时候加载。&nbsp;<br clear=\"none\"/>\n对于在多人项目中，可以给每一个人设置一个输出通道，这样在每个人在构建Logger时，用自己的域名称，让调试信&nbsp;</div><div>息输出到自己的log文件中。</div><div><br/></div><div><hr/></div><div><br/></div><div><p><span style=\"font-size: 19px;\"><b>四、log4j配置举例（properties）</b></span></p><p>#log4j.rootLogger = [ level ] , appenderName, appenderName,&nbsp;<br clear=\"none\"/>\n#类别level 为 OFF、FATAL、ERROR、WARN、INFO、DEBUG、log、ALL或自定义的优先级&nbsp;<br clear=\"none\"/>\n#Log4j常用的优先级FATAL&gt;ERROR&gt;WARN&gt;INFO&gt;DEBUG</p><p>#stdout为控制台 ，Errorlog为错误记录日志 ，&nbsp;<br clear=\"none\"/>\nlog4j.rootCategory=INFO,stdout,Runlog,Errorlog</p><p>#输出的appender的格式为&nbsp;<br clear=\"none\"/>\n#log4j.appender.appenderName = fully.qualified.name.of.appender.class&nbsp;<br clear=\"none\"/>\n#log4j.appender.appenderName.option1 = value1&nbsp;<br clear=\"none\"/>\n#log4j.appender.appenderName.option = valueN&nbsp;<br clear=\"none\"/>\n#Log4j中appender支持的输出&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.ConsoleAppender 控制台&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.FileAppender 文件&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.DailyRollingFileAppender 每天产生一个日志文件&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.RollingFileAppender （文件大小到达指定尺寸的时候产生一个新的文件），&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.WriterAppender （将日志信息以流格式发送到任意指定的地方）&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.net.SMTPAppender 邮件&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.jdbc.JDBCAppender 数据库</p><p>＃定义输出的形式&nbsp;<br clear=\"none\"/>\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender&nbsp;<br clear=\"none\"/>\nlog4j.appender.Runlog=org.apache.log4j.DailyRollingFileAppender&nbsp;<br clear=\"none\"/>\nlog4j.appender.Errorlog=org.apache.log4j.DailyRollingFileAppender</p><p>#可以指定输出文件的优先级&nbsp;<br clear=\"none\"/>\nlog4j.appender.Errorlog.Threshold=ERROR</p><p>#指定输出的文件&nbsp;<br clear=\"none\"/>\nlog4j.appender.Runlog.File=D:\\\\UserInfoSyn\\\\WebRoot\\\\WEB-INF\\\\runlog\\\\runlog.log&nbsp;<br clear=\"none\"/>\nlog4j.appender.Errorlog.File=D:\\\\UserInfoSyn\\\\WebRoot\\\\WEB-INF\\\\errorlog\\\\errorlog.log</p><p>#Log4j的layout布局&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.HTMLLayout 以HTML表格形式布局&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.PatternLayout 可以灵活地指定布局模式&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.SimpleLayout&nbsp; 包含日志信息的级别和信息字符串&nbsp;<br clear=\"none\"/>\n#org.apache.log4j.TTCCLayout&nbsp;&nbsp;&nbsp; 包含日志产生的时间、线程、类别等等信息</p><p>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\nlog4j.appender.Runlog.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\nlog4j.appender.Errorlog.layout=org.apache.log4j.PatternLayout</p><p>#输出格式,log4j javadoc org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#-X号:X信息输出时左对齐；&nbsp;<br clear=\"none\"/>\n#%p:日志信息级别&nbsp;<br clear=\"none\"/>\n# %d{}:日志信息产生时间&nbsp;<br clear=\"none\"/>\n# %c:日志信息所在地（类名）&nbsp;<br clear=\"none\"/>\n# %m:产生的日志具体信息&nbsp;<br clear=\"none\"/>\n# %n:%n:输出日志信息换行&nbsp;<br clear=\"none\"/>\n#%l:标记日志的log.errer或者是log.info等记录所在的类名以及方法，行数的相信信息<br clear=\"none\"/>\nlog4j.appender.stdout.layout.ConversionPattern= %5p %d{yyyy-MM-dd HH:mm:ss} %c %m %n&nbsp;<br clear=\"none\"/>\nlog4j.appender.Runlog.layout.ConversionPattern= %5p %d{yyyy-MM-dd HH:mm:ss} %c %m %n&nbsp;<br clear=\"none\"/>\nlog4j.appender.Errorlog.layout.ConversionPattern= %5p %d{yyyy-MM-dd HH:mm:ss} %c %m %n</p><p>#指定某个包的优先级&nbsp;<br clear=\"none\"/>\nlog4j.category.com.neusoft.mbip.dm.util=ERROR</p><p>#示例&nbsp;<br clear=\"none\"/>\n###################&nbsp;<br clear=\"none\"/>\n# Console Appender&nbsp;<br clear=\"none\"/>\n###################&nbsp;<br clear=\"none\"/>\n#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.Threshold=DEBUG&nbsp;<br clear=\"none\"/>\n#log4j.appender.CONSOLE.Target=System.out&nbsp;<br clear=\"none\"/>\n#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.CONSOLE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&nbsp;<br clear=\"none\"/>\n#log4j.appender.CONSOLE.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD] n%c[CATEGORY]%n%m[MESSAGE]%n%n</p><p>#####################&nbsp;<br clear=\"none\"/>\n# File Appender&nbsp;<br clear=\"none\"/>\n#####################&nbsp;<br clear=\"none\"/>\n#log4j.appender.FILE=org.apache.log4j.FileAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.FILE.File=file.log&nbsp;<br clear=\"none\"/>\n#log4j.appender.FILE.Append=false&nbsp;<br clear=\"none\"/>\n#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&nbsp;<br clear=\"none\"/>\n# Use this layout for LogFactor 5 analysis</p><p>########################&nbsp;<br clear=\"none\"/>\n# Rolling File????? RollingFileAppender??????????????????&nbsp;<br clear=\"none\"/>\n########################&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.Threshold=ERROR&nbsp;<br clear=\"none\"/>\n# 文件位置&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.File=rolling.log&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.Append=true&nbsp;<br clear=\"none\"/>\n#文件大小&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.MaxFileSize=10KB&nbsp;<br clear=\"none\"/>\n#指定采用输出布局和输出格式&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.MaxBackupIndex=1&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p><p>####################&nbsp;<br clear=\"none\"/>\n# Socket Appender&nbsp;<br clear=\"none\"/>\n####################&nbsp;<br clear=\"none\"/>\n#log4j.appender.SOCKET=org.apache.log4j.RollingFileAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.SOCKET.RemoteHost=localhost&nbsp;<br clear=\"none\"/>\n#log4j.appender.SOCKET.Port=5001&nbsp;<br clear=\"none\"/>\n#log4j.appender.SOCKET.LocationInfo=true&nbsp;<br clear=\"none\"/>\n# Set up for Log Facter 5&nbsp;<br clear=\"none\"/>\n#log4j.appender.SOCKET.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.SOCET.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD]%n%c[CATEGORY]%n%m[MESSAGE]%n%n</p><p>########################&nbsp;<br clear=\"none\"/>\n# SMTP Appender&nbsp;<br clear=\"none\"/>\n#######################&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.Threshold=FATAL&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.BufferSize=10&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.From=chenyl@hollycrm.com&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.SMTPHost=mail.hollycrm.com&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.Subject=Log4J Message&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.To=chenyl@hollycrm.com&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p><p>########################&nbsp;<br clear=\"none\"/>\n# JDBC Appender&nbsp;<br clear=\"none\"/>\n#######################&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.user=root&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.password=&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES (&apos;[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&apos;)&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p><p>########################&nbsp;<br clear=\"none\"/>\n# Log Factor 5 Appender&nbsp;<br clear=\"none\"/>\n########################&nbsp;<br clear=\"none\"/>\n#log4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appender&nbsp;<br clear=\"none\"/>\n#log4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000</p><p>###################&nbsp;<br clear=\"none\"/>\n#自定义Appender&nbsp;<br clear=\"none\"/>\n###################&nbsp;<br clear=\"none\"/>\n#log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender&nbsp;<br clear=\"none\"/>\n#log4j.appender.im.host = mail.cybercorlin.net&nbsp;<br clear=\"none\"/>\n#log4j.appender.im.username = username&nbsp;<br clear=\"none\"/>\n#log4j.appender.im.password = password&nbsp;<br clear=\"none\"/>\n#log4j.appender.im.recipient = corlin@cybercorlin.net&nbsp;<br clear=\"none\"/>\n#log4j.appender.im.layout=org.apache.log4j.PatternLayout&nbsp;<br clear=\"none\"/>\n#log4j.appender.im.layout.ConversionPattern =[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n</p></div><div><br clear=\"none\"/></div></div>"
    }
  ]
}